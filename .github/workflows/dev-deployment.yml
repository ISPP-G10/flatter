name: Development Flatter Deployment

on:
  push:
    branches:
      - develop

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCLOUD_VM: ${{ secrets.GCP_VM_SPRINT1 }}
  GKE_ZONE: europe-west9-a

jobs:
  flatter-dev-deployment:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
    - run: |-
        gcloud components install gke-gcloud-auth-plugin
        gcloud compute ssh --zone "$GKE_ZONE" "$GCLOUD_VM"  --project "$PROJECT_ID"

    - name: Deploy
      run: |-
        sudo apt-get update
        sudo apt-get install -y git
        sudo curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        git clone ${{ github.event.repository.clone_url }}
        cd flatter/docker
        touch .env
        echo 'POSTGRES_DB="${{ secrets.POSTGRES_DB }}"' >> .env
        echo 'POSTGRES_USER="${{ secrets.POSTGRES_USER }}"' >> .env
        echo 'POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"' >> .env
        echo 'DJANGO_ENV="production"' >> .env
        echo 'DEBUG=0' >> .env
        echo 'SECRET_KEY="${{ secrets.SECRET_KEY }}"' >> .env
        echo 'DJANGO_ALLOWED_HOSTS=""' >> .env
        echo 'DJANGO_ADMIN_USER="${{ secrets.DJANGO_ADMIN_USER }}"' >> .env
        echo 'DJANGO_ADMIN_EMAIL="flatter.ispp@gmail.com"' >> .env
        echo 'DJANGO_ADMIN_PASSWORD="${{ secrets.DJANGO_ADMIN_PASSWORD }}"' >> .env
        echo 'DATABASE="postgres"' >> .env
        echo 'DB_ENGINE="django.db.backends.postgresql"' >> .env
        echo 'DB_DATABASE="${{ secrets.DB_DATABASE }}"' >> .env
        echo 'DB_USER="${{ secrets.DB_USER }}"' >> .env
        echo 'DB_HOST="${{ secrets.DB_HOST }}"' >> .env
        echo 'DB_PORT="5432"' >> .env
        echo 'NODE_ENV="production"' >> .env
        echo 'API_SERVER_URL="${{ secrets.API_SERVER_URL }}"' >> .env
        docker-compose up -d